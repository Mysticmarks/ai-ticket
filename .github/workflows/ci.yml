name: Continuous Integration

on:
  push:
    branches: [ "docker-main" ] # Or the actual main branch
  pull_request:
    branches: [ "docker-main" ] # Or the actual main branch
  workflow_dispatch: # Allow manual triggering

jobs:
  lint-test-build:
    runs-on: ubuntu-latest # Using standard runner for broader compatibility first
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"] # Consistent with Dockerfile

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Updated to v4
      with:
        submodules: 'true'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4 # Updated to v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --show-source --statistics

    - name: Check formatting with black
      run: |
        black --check .

    - name: Check import order with isort
      run: |
        isort --check-only .

    - name: Run tests with pytest
      run: |
        pytest tests/

    - name: Build Docker image for ai_ticket
      run: |
        docker-compose build ai_ticket
        # As an alternative, could be: docker build . -t ai_ticket:latest -f Dockerfile
        # This step is primarily to ensure the Dockerfile is valid and builds.
        # Actual pushing is handled by docker-image.yml
