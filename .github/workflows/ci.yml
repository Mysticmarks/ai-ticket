name: Continuous Integration

on:
  push:
    branches: [ "docker-main" ]
  pull_request:
    branches: [ "docker-main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Validate docker-compose configuration
        run: docker-compose config -q

      - name: Lint with flake8
        run: flake8 . --count --show-source --statistics

      - name: Check formatting with black
        run: black --check .

      - name: Check import order with isort
        run: isort --check-only .

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov

      - name: Run unit and failure-mode tests
        run: |
          pytest \
            --cov=src/ai_ticket \
            --cov-report=xml \
            -m "not performance" \
            --ignore=tests/integration \
            --ignore=tests/performance

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

      - name: Build ai_ticket Docker image
        run: docker-compose build ai_ticket

  integration:
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run integration tests
        run: pytest tests/integration

  ui:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install UI dependencies
        run: npm install
        working-directory: src/ai_ticket/ui
        env:
          npm_config_package_lock: "false"

      - name: Build UI bundle
        run: npm run build
        working-directory: src/ai_ticket/ui

  performance-smoke:
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run performance smoke tests
        run: pytest -m performance tests/performance --maxfail=1 --disable-warnings
